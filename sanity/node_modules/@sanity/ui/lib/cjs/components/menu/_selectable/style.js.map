{
  "version": 3,
  "sources": ["../../../../../src/components/menu/_selectable/style.ts"],
  "sourcesContent": ["import {css, FlattenSimpleInterpolation} from 'styled-components'\nimport {ThemeProps} from '../../../styles'\nimport {_colorVarsStyle} from '../../../styles/colorVars'\nimport {SelectableTone} from '../../../types/selectable'\n\n/**\n * @internal\n */\nexport interface SelectableStyleProps {\n  $tone: SelectableTone\n}\n\nexport function selectableBaseStyle(): FlattenSimpleInterpolation {\n  return css`\n    background-color: inherit;\n    color: inherit;\n\n    &[data-as='button'] {\n      -webkit-font-smoothing: inherit;\n      appearance: none;\n      outline: none;\n      font: inherit;\n      text-align: inherit;\n      border: 0;\n      width: stretch;\n    }\n\n    /* &:is(a) */\n    &[data-as='a'] {\n      text-decoration: none;\n    }\n  `\n}\n\nexport function selectableColorStyle(\n  props: SelectableStyleProps & ThemeProps\n): FlattenSimpleInterpolation {\n  const {$tone, theme} = props\n  const {base, muted, selectable} = theme.sanity.color\n  // @todo: remove use of `muted` here\n  const tone = selectable ? selectable[$tone] || selectable.default : muted[$tone] || muted.default\n\n  return css`\n    ${_colorVarsStyle(base, tone.enabled)}\n\n    background-color: var(--card-bg-color);\n    color: var(--card-fg-color);\n\n    /* &:is(button) */\n    &[data-as='button'] {\n      &:disabled {\n        ${_colorVarsStyle(base, tone.disabled)}\n      }\n\n      &:not(:disabled) {\n        &[data-selected],\n        &[aria-pressed='true'] {\n          ${_colorVarsStyle(base, tone.selected)}\n        }\n\n        @media (hover: hover) {\n          &:not([data-selected]):not([aria-pressed='true']):hover {\n            ${_colorVarsStyle(base, tone.hovered)}\n          }\n\n          &:active {\n            ${_colorVarsStyle(base, tone.pressed)}\n          }\n        }\n      }\n    }\n\n    /* &:is(a) */\n    &[data-as='a'] {\n      &[data-disabled] {\n        ${_colorVarsStyle(base, tone.disabled)}\n      }\n\n      &:not([data-disabled]) {\n        @media (hover: hover) {\n          outline: none;\n\n          &:hover {\n            ${_colorVarsStyle(base, tone.hovered)}\n          }\n\n          &:active {\n            ${_colorVarsStyle(base, tone.pressed)}\n          }\n        }\n\n        &[data-selected] {\n          ${_colorVarsStyle(base, tone.selected)}\n        }\n\n        [aria-selected='true'] > & {\n          ${_colorVarsStyle(base, tone.selected)}\n        }\n      }\n    }\n\n    ${theme.sanity.styles?.card?.root}\n  `\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA,+BAA8C;AAE9C,uBAA8B;AAUvB,+BAA2D;AAChE,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBF,8BACL,OAC4B;AApC9B;AAqCE,QAAM,EAAC,OAAO,UAAS;AACvB,QAAM,EAAC,MAAM,OAAO,eAAc,MAAM,OAAO;AAE/C,QAAM,OAAO,aAAa,WAAW,UAAU,WAAW,UAAU,MAAM,UAAU,MAAM;AAE1F,SAAO;AAAA,MACH,sCAAgB,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAQvB,sCAAgB,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAMzB,sCAAgB,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,cAKzB,sCAAgB,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA,cAI3B,sCAAgB,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAS/B,sCAAgB,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAQvB,sCAAgB,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA,cAI3B,sCAAgB,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,YAK7B,sCAAgB,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA,YAI3B,sCAAgB,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,MAKjC,kBAAM,OAAO,WAAb,mBAAqB,SAArB,mBAA2B;AAAA;AAAA;",
  "names": []
}
