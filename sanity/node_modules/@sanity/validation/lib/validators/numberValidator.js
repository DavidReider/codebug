"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _ValidationError = _interopRequireDefault(require("../ValidationError"));

var _genericValidator = _interopRequireDefault(require("./genericValidator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var precisionRx = /(?:\.(\d+))?(?:[eE]([+-]?\d+))?$/;

var integer = (unused, value, message) => {
  if (!Number.isInteger(value)) {
    return new _ValidationError.default(message || 'Must be an integer');
  }

  return true;
};

var precision = (limit, value, message) => {
  if (typeof value === 'undefined') return true;
  var places = value.toString().match(precisionRx);
  var decimals = Math.max((places[1] ? places[1].length : 0) - (places[2] ? parseInt(places[2], 10) : 0), 0);

  if (decimals > limit) {
    return new _ValidationError.default(message || "Max precision is ".concat(limit));
  }

  return true;
};

var min = (minNum, value, message) => {
  if (value >= minNum) {
    return true;
  }

  return new _ValidationError.default(message || "Must be greater than or equal ".concat(minNum));
};

var max = (maxNum, value, message) => {
  if (value <= maxNum) {
    return true;
  }

  return new _ValidationError.default(message || "Must be less than or equal ".concat(maxNum));
};

var greaterThan = (num, value, message) => {
  if (value > num) {
    return true;
  }

  return new _ValidationError.default(message || "Must be greater than ".concat(num));
};

var lessThan = (maxNum, value, message) => {
  if (value < maxNum) {
    return true;
  }

  return new _ValidationError.default(message || "Must be less than ".concat(maxNum));
};

var _default = Object.assign({}, _genericValidator.default, {
  min,
  max,
  lessThan,
  greaterThan,
  integer,
  precision
});

exports.default = _default;